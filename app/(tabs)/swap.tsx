import { useState } from 'react';
import { ethers } from 'ethers';
import axios from 'axios';
import { View, Text, TextInput, Button } from 'react-native';

const ONE_INCH_API = "https://api.1inch.dev/swap/v5.2/1";
const USDC_ADDRESS = "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"; // –ø—Ä–∏–∫–ª–∞–¥: USDC –Ω–∞ Ethereum
const PRIVATE_KEY = "—Ç–≤—ñ–π_–ø—Ä–∏–≤–∞—Ç–Ω–∏–π_–∫–ª—é—á";
const RPC_URL = "https://rpc.ankr.com/eth"; // –∞–±–æ Infura / Alchemy

export default function SwapComponent() {
  const [amountEth, setAmountEth] = useState('');
  const [status, setStatus] = useState('');

  const handleSwap = async () => {
    try {
      const amountWei = ethers.parseEther(amountEth);

      const provider = new ethers.JsonRpcProvider(RPC_URL);
      const wallet = new ethers.Wallet(PRIVATE_KEY, provider);

      // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ 1inch
      const { data } = await axios.get(`${ONE_INCH_API}/swap`, {
        params: {
          fromTokenAddress: ethers.ZeroAddress, // ETH
          toTokenAddress: USDC_ADDRESS,
          amount: amountWei.toString(),
          fromAddress: wallet.address,
          slippage: 1,
        },
        headers: {
          Authorization: `Bearer ${process.env.EXPO_PUBLIC_1INCH_API_KEY}` // –∞–±–æ –≤—Å—Ç–∞–≤ –Ω–∞–ø—Ä—è–º—É
        }
      });

      setStatus("üîÑ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó...");

      const tx = await wallet.sendTransaction({
        to: data.tx.to,
        data: data.tx.data,
        value: BigInt(data.tx.value),
        gasLimit: BigInt(data.tx.gas), // –æ–ø—Ü—ñ–π–Ω–æ
      });

      await tx.wait();
      setStatus("üéâ –°–≤–∞–ø –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
    } catch (err) {
      console.error(err);
      setStatus("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–≤–∞–ø—É");
    }
  };

  return (
    <View style={{ padding: 20,  }}>
      <Text>–í–≤–µ–¥–∏ —Å—É–º—É ETH –¥–ª—è —Å–≤–∞–ø—É –≤ USDC:</Text>
      <TextInput
        placeholder="0.01"
        keyboardType="decimal-pad"
        value={amountEth}
        onChangeText={setAmountEth}
        style={{ borderWidth: 1, padding: 8, marginVertical: 10 }}
      />
      <Button title="üí± –ó—Ä–æ–±–∏—Ç–∏ —Å–≤–∞–ø" onPress={handleSwap} />
      <Text style={{ marginTop: 10 }}>{status}</Text>
    </View>
  );
}
